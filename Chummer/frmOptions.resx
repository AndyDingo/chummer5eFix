<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tlpKarmaCostsList.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQAA
        ACsAAAAAAAAAKwAAADEAAAAAAAAAAH57eQBzcW8AdHJwAHNxbwB+e3kAfXp4AH16eAB9engAcnBuAHJw
        bvZubGrgAAAAJm5sauBycG72cnBuAH16eAB+e3kAc3FvAHRycABzcW8Afnt5AH16eAB9engAAAAAMQAA
        ACxvbmzkc3Fv/2tpZ8tzcW//cG5s5AAAACwAAAAwfnt5AHNxbwB0cnAAc3FvAH57eQB+engAfXp4AHt4
        dvZ2c3HkkIyK+b+8uv/EwL7/v7y6/4qHhfl2c3Hje3h29X57eQBzcW8AdHJwAHRycAB4dnQAcnBuAIKA
        fgCAfnzXfHp4/8jFwv+rqKb/iYiG/6uopv/IxcP/fHp4/399e/9+e3kAc3FvAAAAADEAAAAreXd1AAAA
        ACsAAAAuAAAAKHd2c8rV0tH/j4yL/wAAADOPjIv/1dLR/317eesAAAAzfXp4AHJwbgBycG72bmxq4AAA
        ACZubGreb21r6IaDgc+FgoD/2NXU/7i2tP+Vko//uLa0/9jV1P+FgoD/ioeF/wAAADEAAAAsb25s5HNx
        b/9raWfLc3Fv/21radeKh4XXhoOB06WiovTg3t3/5uTj/+De3f+lo6H7ioeFs42KiPR7eHb2dnNx5JCM
        ivm/vLr/xMC+/7+8uv+JhoT0cm9t1XJvbtiDgX+yjYuJ/4yJh+aMi4n/hIKAwouIhgCNiogAf3172Hx6
        eP/IxcL/q6im/4mIhv+rqKb/yMXD/3x6eP99e3n/mJWT4ZaTkf+QjYsAlpOR/5aTkfSXlJIAjYqIAAAA
        ACt3dXPK1dLR/4+Mi/8AAAAzj4yL/9XS0f99e3nqAAAAM5mWlACXlJIAkY6MAJaTkQCWk5EAl5SSAIyJ
        hwCGg4HfhYKA/9jV1P+4trT/lZKP/7i2tP/Y1dT/hYKA/4mGhP+IhYMAmJWTAJKPjQCWk5EAlpORAJeU
        kgCMiYcAjYqI9YqHhd6loqH54N7d/+bk4//g3t3/paOh+4qHhbONioj0jYqIAI2KiACMiYcAl5SSAJaT
        kQCXlJIAjImHAI2KiACLiIYAhIKAwYyLif+MiYfmjIuJ/4SCgMKLiIYAjYqIAI2KiACNiogAjImHAJeU
        kgCWk5EAl5SSAIyJhwCNiogAl5SSAJaTkfSWk5H/kI2LAJaTkf+Wk5H0l5SSAI2KiACNiogAjYqIAIyJ
        hwCXlJIAlpORAJeUkgCMiYcA////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP+TAAD/gwAA/gAAAP4AAAD+AAAAyAAAAMAAAAAAAAAAAAMAAAAT
        AAAAfwAAAH8AAAB/AADB/wAAyf8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAANAAAAEwAAAA0AAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAACsAAAA8AAAAKwAAAA0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAAEAAAABQAAAANAAAABAAAAAAAAAAVZGJgxW1raf9kYmDFAAAAFQAA
        AAAAAAAFAAAAEAAAABQAAAANAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAxAAAAPgAAAC4AAAAWAAAADQAAACNubGr/7u3r/25s
        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
        9P+wrqz/iIWD7gAAABQAAAAAAAAAAAAAAA0AAAArAAAAQAAAAD4AAAA5AAAAQGxpZ+Sgnpv/4uHf/+Lh
        3//i4uD/4uHf/+Lh3/+fnJr/bGpp2/Du7v+mpKL/dXJxqmBeXI6Gg4Hoi4mH//Tz8v+LiYf/iIWD8YF+
        e2uEgX+msrCu//v7+v+MiYf/AAAADQAAAAAAAAAAAAAAEXBubMN4dXP/dnNx/2JgXr1ua2nlq6mn/+Lh
        3//b2dj/2tjX/9rY1//a2Nf/29nY/+Hg3v+pp6X/ZmRi2jc2NXNjYF7CdXJw/1tZV62MiYf/+fj3/4uI
        hf8AAAAVAAAAAAAAAASNioiwj4uJ/46LibUAAAAEAAAAAAAAAAAAAAAKenh2/9za2v/n5+X/tbWz/6Oh
        n//j4eD/1dLR/9bU0//e3Nv/397d/97c2//W1NP/1dLR/+Ph4P+TkY//iIWE/7i3tf/q6uj/d3Ry/5GO
        jP///v7/kI2K/wAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ5d3V5enh2/5ya
        mP/GxML/5eXk/9DOzf/Rz87/3d3b/6akof+Rj43/pqSh/93d2v/Rz87/0s/O/+Xl5P/l4+L/wsC//5CO
        jP95d3Xgko+NpZSRj/+Rj421AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADY2FeYXZzcP/o6Ob/xcPC/93b2v+npqT/bmxqqVVSUTJubGqpp6ak/93b2v/Fw8L/6Ofl/3t5
        d/9zcXC+b2xqTQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAACgAAABcDAgIvioaF/+Xk4v+/vLv/4eHg/42Lif81NDNSAAAAKDU0M1KVk5H/397d/7+8
        u//q6ef/end1/wAAADoAAAAkAAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAoAAAAmAAAAPk5MS4J6d3X/6+rq/7i1s//c2tn/raup/2lnZbktLCtjaWdluayq
        qP/b2tn/uLWz/+vq6f+Afnz/cW5sy0pIR3oAAAAyAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEWpoZpODgH7/pKGf/8zKyP/s6+r/vbq4/726t//k4+H/p6Wj/5qY
        lv+vrKv/4+Ph/726uP/Avrz/7Ovq/+rp5//IxsX/mJWT/4SBf/EAAAAUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANiIWC/+Ph4f/u7ev/v729/66sq//o5uX/sq+t/7u3
        tf/b2dj/4uHh/9vZ2P+6t7X/sq+t/+jm5f+hn53/lpOR/8LAv//y8e//h4SC/wAAAA0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASIhYO2iIWD/4eEgv+Bfnykgn993Lq4
        uP/p5+b/vbu5/62qp/+tqqj/raqn/727uf/p5+b/u7m4/4OAfuFtamkuhIF/q4iFg/+IhYO2AAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAKhIF/46Wjof/w7+//8PDv//Lx8P/w8O//8O/v/6Wjof+EgX/jAAAACgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA5CQD9Qm5iW/+7t6/+LiYf/h4OB/4uJh//u7ev/m5iW/0JAP1AAAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEn57ebvIx8X/z83N/4WCgLwAAAAOhYKAvM/Nzf/Ix8X/fnt5uwAA
        ABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANkI2L//b29f+joJ7/eXd1UwAAAAN5d3VTo6Ce//b2
        9f+QjYv/AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASRjoy2oJ6c/5OQju4AAAAFAAAAAAAA
        AAWTkI7uoJ6c/5GOjLYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//4P///+D///ggg//4AAP/+AAD//gAA//4AAP/8AAB/+AAAP/g
        AAD/4AAA+CAAAPggAAD4AAAH+AAAA/gAAAMAAAADAAAAAwAAAIMAAAD/AAAA/8AAD/8AAAf/AAAH/wAA
        B/8AAAf/AAAH//gA///4AP//+AD///gA///4IP//
</value>
  </data>
</root>